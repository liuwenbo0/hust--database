14.1
/* 请在适当的位置补充代码，完成指定的任务 
   提示：
      try {


      } catch
    之间补充代码  
*/
import java.sql.*;

public class Client {
    public static void main(String[] args) {
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String URL = "jdbc:mysql://127.0.0.1:3306/finance?useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=UTC";
            String USER = "root";
            String PASS = "123123";
            Connection conn = DriverManager.getConnection(URL, USER, PASS);
            String SQL = "SELECT client.c_name AS `姓名`, client.c_mail AS `邮箱`, client.c_phone AS `电话` FROM client WHERE client.c_mail IS NOT NULL"; 
            statement = conn.createStatement();
            resultSet = statement.executeQuery(SQL);
            System.out.println("姓名\t邮箱\t\t\t\t电话");
            while(resultSet.next())
            {
                System.out.println(resultSet.getString("姓名")+"\t"+resultSet.getString("邮箱")+"\t\t"+resultSet.getString("电话"));
            }
         } catch (ClassNotFoundException e) {
            System.out.println("Sorry,can`t find the JDBC Driver!"); 
            e.printStackTrace();
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }

                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException throwables) {
                throwables.printStackTrace();
            }
        }
    }
}

14.2
import java.sql.*;
import java.util.Scanner;

public class Login {
    public static void main(String[] args) {
        Connection connection = null;
        //申明下文中的resultSet, statement
        Statement statement = null;
        ResultSet resultSet = null;

        Scanner input = new Scanner(System.in);

        System.out.print("请输入用户名：");
        String loginName = input.nextLine();
        System.out.print("请输入密码：");
        String loginPass = input.nextLine();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String userName = "root";
            String passWord = "123123";
            String url = "jdbc:mysql://127.0.0.1:3306/finance?useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=UTC";
            connection = DriverManager.getConnection(url, userName, passWord);
            // 补充实现代码:
            statement = connection.createStatement();
            String SQL="SELECT c_id FROM client WHERE c_mail = '"+loginName+"' AND c_password= '"+loginPass+"' ;";
            resultSet = statement.executeQuery(SQL);
            if(resultSet.next())  System.out.print("登录成功。\n");
            else  System.out.print("用户名或密码错误！\n");


         } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }

                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException throwables) {
                throwables.printStackTrace();
            }
        }
    }
}

14.3
import java.sql.*;
import java.util.Scanner;

public class AddClient {
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://127.0.0.1:3306/finance?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=UTC";
    static final String USER = "root";
    static final String PASS = "123123";
    /**
     * 向Client表中插入数据
     *
     * @param connection 数据库连接对象
     * @param c_id 客户编号
     * @param c_name 客户名称
     * @param c_mail 客户邮箱
     * @param c_id_card 客户身份证
     * @param c_phone 客户手机号
     * @param c_password 客户登录密码
     */
    public static int insertClient(Connection connection,
                                   int c_id, String c_name, String c_mail,
                                   String c_id_card, String c_phone, 
                                   String c_password)throws SQLException{

        String SQL = "INSERT INTO client values(?,?,?,?,?,?)";
        PreparedStatement pps = connection.prepareStatement(SQL);
        pps.setString(1, String.valueOf(c_id));
        pps.setString(2,c_name);
        pps.setString(3,c_mail);
        pps.setString(4,c_id_card);
        pps.setString(5,c_phone);
        pps.setString(6,c_password);
        int n = pps.executeUpdate();
        return n;
    }

    // 不要修改main() 
    public static void main(String[] args) throws Exception {

        Scanner sc = new Scanner(System.in);
        Class.forName(JDBC_DRIVER);

        Connection connection = DriverManager.getConnection(DB_URL, USER, PASS);

        while(sc.hasNext())
        {
            String input = sc.nextLine();
            if(input.equals(""))
                break;

            String[]commands = input.split(" ");
            if(commands.length ==0)
                break;
            int id = Integer.parseInt(commands[0]);
            String name = commands[1];
            String mail = commands[2];
            String idCard = commands[3];
            String phone = commands[4];
            String password = commands[5];

            insertClient(connection, id, name, mail, idCard, phone, password);
        }
    }

}

14.4
import java.sql.*;
import java.util.Scanner;

public class RemoveCard {
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://127.0.0.1:3306/finance?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=UTC";
    static final String USER = "root";
    static final String PASS = "123123";
    /**
     * 删除bank_card表中数据
     *
     * @param connection 数据库连接对象
     * @param b_c_id 客户编号
     * @param c_number 银行卡号
     */
    public static int removeBankCard(Connection connection,
                                   int b_c_id, String b_number)throws SQLException{

        String SQL = "DELETE FROM bank_card WHERE b_c_id = ? AND b_number = ?";
        PreparedStatement pps = connection.prepareStatement(SQL);
        pps.setString(1, String.valueOf(b_c_id));
        pps.setString(2,b_number);
        int n = pps.executeUpdate();
        return n;
    }

    // 不要修改main() 
    public static void main(String[] args) throws Exception {

        Scanner sc = new Scanner(System.in);
        Class.forName(JDBC_DRIVER);

        Connection connection = DriverManager.getConnection(DB_URL, USER, PASS);

        while(sc.hasNext())
        {
            String input = sc.nextLine();
            if(input.equals(""))
                break;

            String[]commands = input.split(" ");
            if(commands.length ==0)
                break;
            int id = Integer.parseInt(commands[0]);
            String carNumber = commands[1];
            
            int n = removeBankCard(connection, id, carNumber);
            if (n > 0) {
               System.out.println("已销卡数：" + n);
            } else {
               System.out.println("销户失败，请检查客户编号或银行卡号！" );
            }
        }
    }

}

14.5
import java.sql.*;
import java.util.Scanner;

public class ChangePass {
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://127.0.0.1:3306/finance?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=UTC";
    static final String USER = "root";
    static final String PASS = "123123";
    /**
     * 修改客户密码
     *
     * @param connection 数据库连接对象
     * @param mail 客户邮箱,也是登录名
     * @param password 客户登录密码
     * @param newPass  新密码
     * @return
     *   1 - 密码修改成功
     *   2 - 用户不存在
     *   3 - 密码不正确
     *  -1 - 程序异常(如没能连接到数据库等）
     */
    public static int passwd(Connection connection,
                             String mail,
                             String password, 
                             String newPass){
    try{
        Statement statement = null;
        statement = connection.createStatement();
        String SQL = "";
        SQL = "SELECT * FROM client WHERE c_mail = '"+mail+"' ";
        ResultSet resultSet = statement.executeQuery(SQL);
        if(!resultSet.next())
        {
            return 2;
        }
          
        if(!password.equals(resultSet.getString("c_password")))
          return 3;
        SQL = "UPDATE client SET c_password = ? where c_password = ? && c_mail = ?";
        PreparedStatement pps = connection.prepareStatement(SQL);
        pps.setString(1,newPass);
        pps.setString(2,password);
        pps.setString(3,mail);
        pps.executeUpdate();
        return 1;
    }catch(Exception e)
    {
        return -1;
    }

    }

    // 不要修改main() 
    public static void main(String[] args) throws Exception {

        Scanner sc = new Scanner(System.in);
        Class.forName(JDBC_DRIVER);

        Connection connection = DriverManager.getConnection(DB_URL, USER, PASS);

        while(sc.hasNext())
        {
            String input = sc.nextLine();
            if(input.equals(""))
                break;

            String[]commands = input.split(" ");
            if(commands.length ==0)
                break;
            String email = commands[0];
            String pass = commands[1];
            String pwd1 = commands[2];
            String pwd2 = commands[3];
            if (pwd1.equals(pwd2)) {
              int n = passwd(connection, email, pass, pwd1);  
              System.out.println("return: " + n);
            } else {
              System.out.println("两次输入的密码不一样!");
            }
        }
    }

}

14.6
import java.sql.*;
import java.util.Scanner;

public class Transfer {
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://127.0.0.1:3306/finance?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=UTC";
    static final String USER = "root";
    static final String PASS = "123123";
    /**
     * 转账操作
     *
     * @param connection 数据库连接对象
     * @param sourceCard 转出账号
     * @param destCard 转入账号
     * @param amount  转账金额
     * @return boolean
     *   true  - 转账成功
     *   false - 转账失败
     */
    public static boolean transferBalance(Connection connection,
                             String sourceCard,
                             String destCard, 
                             double amount)throws SQLException{
        connection.setAutoCommit(false);
        String SQL="SELECT b_type ,b_balance FROM bank_card WHERE b_number='"+sourceCard+"' ";
        Statement statement = connection.createStatement();
        ResultSet resultSet = statement.executeQuery(SQL);
        if(!resultSet.next())
        {
            connection.commit();
            return false;
        }
        else 
        {
            if("信用卡".equals(resultSet.getString("b_type"))){
                connection.commit();
                return false;
            }
            else if(amount > resultSet.getDouble("b_balance")){
                connection.commit();
                return false;
            }
            else{
                SQL="UPDATE bank_card SET b_balance = b_balance - '"+amount+"' WHERE b_number = '"+sourceCard+"' ";
                statement.executeUpdate(SQL);
                SQL="SELECT b_type FROM bank_card WHERE b_number='"+destCard+"' ";
                resultSet = statement.executeQuery(SQL);
                if(!resultSet.next())
                {
                    connection.rollback();
                    return false;
                }
                else if("信用卡".equals(resultSet.getString("b_type"))){
                    SQL="UPDATE bank_card SET b_balance=b_balance - '"+amount+"' WHERE b_number = '"+destCard+"' ";
                    statement.executeUpdate(SQL);
                    connection.commit();
                    return true;
                }
                else {
                    SQL="UPDATE bank_card SET b_balance=b_balance + '"+amount+"' WHERE b_number = '"+destCard+"' ";
                    statement.executeUpdate(SQL);
                    connection.commit();
                    return true;
                }
            }

        }
    }

    // 不要修改main() 
    public static void main(String[] args) throws Exception {

        Scanner sc = new Scanner(System.in);
        Class.forName(JDBC_DRIVER);

        Connection connection = DriverManager.getConnection(DB_URL, USER, PASS);

        while(sc.hasNext())
        {
            String input = sc.nextLine();
            if(input.equals(""))
                break;

            String[]commands = input.split(" ");
            if(commands.length ==0)
                break;
            String payerCard = commands[0];
            String  payeeCard = commands[1];
            double  amount = Double.parseDouble(commands[2]);
            if (transferBalance(connection, payerCard, payeeCard, amount)) {
              System.out.println("转账成功。" );
            } else {
              System.out.println("转账失败,请核对卡号，卡类型及卡余额!");
            }
        }
    }

}

14.7
import java.sql.*;

public class Transform {
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://127.0.0.1:3306/sparsedb?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=UTC";
    static final String USER = "root";
    static final String PASS = "123123";

    /**
     * 向sc表中插入数据
     *
     */
    public static int insertSC(Connection connection,
                             int sno,
                             String col_name, 
                             int col_value)throws SQLException{
    if(col_value!=0){
    String SQL = "insert into sc values(?,?,?)";
    PreparedStatement pps = connection.prepareStatement(SQL);
    pps.setString(1, String.valueOf(sno));
    pps.setString(2,col_name);
    pps.setString(3,String.valueOf(col_value));
    pps.executeUpdate();
    return 0;
    }
    else return 1;
}

    public static void main(String[] args) {

         Connection connection = null;
         Statement statement = null;
         ResultSet resultSet = null;

          try {
            Class.forName(JDBC_DRIVER);
            connection = DriverManager.getConnection(DB_URL, USER, PASS);
            // 补充实现代码:
            statement = connection.createStatement();
            String SQL="SELECT * FROM entrance_exam ";
            resultSet = statement.executeQuery(SQL);
            while(resultSet.next()){
                insertSC(connection,resultSet.getInt("sno"),"chinese",resultSet.getInt("chinese"));
                insertSC(connection,resultSet.getInt("sno"),"math",resultSet.getInt("math"));
                insertSC(connection,resultSet.getInt("sno"),"english",resultSet.getInt("english"));
                insertSC(connection,resultSet.getInt("sno"),"physics",resultSet.getInt("physics"));
                insertSC(connection,resultSet.getInt("sno"),"chemistry",resultSet.getInt("chemistry"));
                insertSC(connection,resultSet.getInt("sno"),"biology",resultSet.getInt("biology"));
                insertSC(connection,resultSet.getInt("sno"),"history",resultSet.getInt("history"));
                insertSC(connection,resultSet.getInt("sno"),"geography",resultSet.getInt("geography"));
                insertSC(connection,resultSet.getInt("sno"),"politics",resultSet.getInt("politics"));
            }


         } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }

                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException throwables) {
                throwables.printStackTrace();
            }
        }
    


        
    }
}


